# 定义一个变量来存储所有的.o文件（虽然在这个示例中我们直接生成可执行文件，但这里为了说明）  
SRCS = $(wildcard *.c)  
  
# 定义一个变量来存储所有的可执行文件名  
BINS = $(SRCS:.c=)  
  
# 默认目标  
all: $(BINS)  
  
# 模式规则，为每个.c文件生成对应的可执行文件  
# 注意：这里假设编译时不需要链接任何库，直接使用gcc  
# %.o: %.c  
# 	gcc -o $@ $<  
  
# 这里我们需要一个伪目标来“欺骗”Makefile，因为上面定义的是%.o规则  
# 但我们实际上想要的是可执行文件，不是.o文件  
# 所以我们重定义规则，直接使用gcc生成可执行文件  
$(BINS): %: %.c  
	gcc -o $@ $<  
  
# 清理所有生成的文件  
clean:  
	rm -f $(BINS)  
  
# 打印帮助信息  
help:  
	@echo "make - 编译所有.c文件生成同名可执行文件"  
	@echo "make clean - 清理所有生成的可执行文件"